# Simple Root CA

# The [default] section contains global constants that can be referred to from
# the entire configuration file. It may also hold settings pertaining to more
# than one openssl command.

[ default ]
HOME           = .
ca             = root-ca                     # CA name
dir            = /root/work/pki              # Top dir
mKEY           = $dir/ca/private/$ca.key
name_opt       = multiline,-esc_msb,utf8     # Display UTF-8 characters

# The next part of the configuration file is used by the openssl req command.
# It defines the CA's key pair, its DN, and the desired extensions for the CA
# certificate.

[ req ]
#input_password          =                 # password for the input private key file    -passin
#output_password         =                 # password for the output private key file   -passout
default_bits            = 4096            # RSA key size                               -newkey
default_keyfile         = $mKEY           # default filename to write a private key to -keyout
#oid_file                                  # file containing additional OBJECT IDENTIFIERS
oid_section             = new_oids        # extra object identifiers
RANDFILE                = $ENV::HOME/.rnd # filename in which random number seed information
encrypt_key             = yes             # Protect private key                        -nodes
default_md              = sha256          # MD to use                                  -[digest]
string_mask             = utf8only        # Emit UTF-8 strings
prompt                  = no              # Don't prompt for DN
utf8                    = yes             # Input is UTF-8
#attributes              = []              # section containing any request attributes
distinguished_name      = ca_dn           # DN section
req_extensions          = ca_reqext       # Desired extensions                         -reqexts
#x509_extensions         =                 # The extentions to add to the
                                           #cert when -x509 is used                    -extensions

[ ca_dn ]
C                      = "FR"                           # countryName
L                      = "Paris"                        # localityName
O                      = "Wheezy"                       # organizationName
OU                     = "Wheezy Certificate Authority" # organizationalUnitName
CN                     = "Wheezy Root CA"               # commonName
emailAddress           = "none@none.com"   #

[ ca_reqext ]
# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
# keyUsage = cRLSign, keyCertSign
keyUsage                = critical,keyCertSign,cRLSign
# basicConstraints: this is what PKIX recommends but some broken software
# chokes on critical extensions
# basicConstraints        = CA:true
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash

# The remainder of the configuration file is used by the openssl ca command.
# The CA section defines the locations of CA assets, as well as the policies
# applying to the CA.

[ ca ]
default_ca              = root_ca                # The default CA section

[ root_ca ]
certificate             = $dir/certs/crt/$ca.crt      # The CA cert
private_key             = $mKEY                       # CA private key
new_certs_dir           = $dir/ca/archive/$ca         # Certificate archive
serial                  = $dir/ca/db/$ca.crt.srl      # Serial number file
crlnumber               = $dir/ca/db/$ca.crl.srl      # CRL number file
database                = $dir/ca/db/$ca.db           # Index file
unique_subject          = no                          # Require unique subject
default_days            = 3652                        # How long to certify for
default_md              = sha256                      # MD to use
policy                  = match_pol                   # Default naming policy
email_in_dn             = no                          # Add email to cert DN
preserve                = no                          # Keep passed DN ordering
name_opt                = $name_opt                   # Subject DN display options
cert_opt                = ca_default                  # Certificate display options
copy_extensions         = none                        # Copy extensions from CSR
x509_extensions         = signing_ca_ext              # Default cert extensions
default_crl_days        = 365                         # How long before next CRL
crl_extensions          = crl_ext                     # CRL extensions

# Naming policies control which parts of a DN end up in the certificate and
# under what circumstances certification should be denied.

[ match_pol ]
countryName             = match                 # Must match 'FR'
stateOrProvinceName     = optional              # Included if present
localityName            = optional              # Included if present
organizationName        = match                 # Must match 'Wheezy'
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

# Certificate extensions define what types of certificates the CA is able to
# create.

[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ signing_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

# CRL extensions exist solely to point to the CA certificate that has issued
# the CRL.

[ crl_ext ]
authorityKeyIdentifier  = keyid:always

# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.

[ new_oids ]
# Add a simple OID like this:
# testoid1=1.2.3.4
# Or use config file substitution like this:
# testoid2=${testoid1}.5.6

# Policies used by the TSA examples.
tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7
